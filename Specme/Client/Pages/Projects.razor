@page "/projects"


@inject ProjectService projectService

<h1>Projects</h1>

<div class="container-fluid">
    <div class="row">
        @foreach (var project in projects)
        {
            <div class="col-md-3 mb-4">
                <Card Class="project-card">
                    <CardHeader>
                        @project.Title
                        <Button Color="Color.Danger"
                                Size="ButtonSize.Small"
                                Float="Float.Right"
                                class="project-action"
                                @onclick="(() => Remove(project))"
                                >
                            ❌
                        </Button>
                        <Button Color="Color.Primary"
                                Size="ButtonSize.Small"
                                Float="Float.Right"
                                class="project-action"
                                @onclick="(() => ShowModalEdit(project))"
                                >
                            ✏
                        </Button>
                    </CardHeader>
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item">@project.Description</li>
                    </ul>
                </Card>

            </div>
        }
    </div>

    <Button Color="Color.Primary" Clicked="@ShowModalNew" Class="float-right">➕ Add new project</Button>

</div>


<Modal @ref="modalRef">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <ModalHeader>
            <ModalTitle>Edit project</ModalTitle>
            <CloseButton Clicked="@HideModal" />
        </ModalHeader>
        <ModalBody>
            <Field>
                <FieldLabel>Title *</FieldLabel>
                <TextEdit Placeholder="Enter title..." @bind-Text="modalProject.Title" />
            </Field>
            <Field>
                <FieldLabel>Description</FieldLabel>
                <TextEdit Placeholder="Enter description..." @bind-Text="modalProject.Description" />
            </Field>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="@HideModal">Close</Button>
            <Button Color="Color.Primary" Clicked="@Save">Save</Button>
        </ModalFooter>
    </ModalContent>
</Modal>


@code {

    // reference to the modal component
    private Project modalProject = new Project();
    private Modal? modalRef;
    private bool isCreationMode = true;

    private void ShowModalNew()
    {
        isCreationMode = true;
        modalRef?.Show();
    }

    private void ShowModalEdit(Project project)
    {
        isCreationMode = false;
        modalProject = project;
        modalRef?.Show();
    }

    private void HideModal()
    {
        modalProject = new Project();
        modalRef?.Hide();
    }

    private async Task Save()
    {
        if (isCreationMode)
        {
            await projectService.Add(modalProject);
            projects = projects.Append(modalProject);
        } 
        else
        {
            await projectService.Update(modalProject);
        }
        HideModal();
    }

    private async Task Remove(Project project)
    {
        await projectService.Remove(project);
        projects = projects.Where(p => p != project);
    }

    private IEnumerable<Project> projects = new Project[] { };

    protected override async Task OnInitializedAsync()
    {
        projects = await projectService.GetAll();
        Console.WriteLine(projects.Count());
    }
}
